apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.sonarqube'
apply plugin: 'maven-publish'
apply plugin: 'signing'

buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = '1.7.0'
  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:4.2.0'
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
  }
}


def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['Tuvali_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['Tuvali_' + name]).toInteger()
}

android {
  compileSdkVersion(Integer.parseInt(findProperty("Tuvali_compileSdkVersion") as String))

  defaultConfig {
    compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
    minSdkVersion getExtOrIntegerDefault('minSdkVersion')
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable 'GradleCompatible'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

}

repositories {
  mavenCentral()
  google()

}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'

  implementation 'org.bouncycastle:bcpkix-jdk15to18:1.68'
  implementation 'org.bouncycastle:bcprov-jdk15to18:1.68'
  implementation 'com.github.snksoft:crc:1.1.0'
  implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.0"

}

apply from: "publish-artifact.gradle"
