name: Gradlew build, publish to npm registry and sonar-analysis
on:
  release:
    types: [published]
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      message:
        description: 'Message for manually triggering'
        required: false
        default: 'Triggered for Updates'
        type: string
  push:
    branches:
      - '!release-branch'
      - release*
      - master
      - 1.*
      - develop*
      - MOSIP*
jobs:
  build-tuvali:
    uses: mosip/kattu/.github/workflows/npm-android-build.yml@master
    with:
      SERVICE_LOCATION: '.'
      ANDROID_LOCATION: 'android'
      BUILD_ARTIFACT: tuvali
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  publish-tuvali-to-npm-registry:
    if: "${{ !contains(github.ref, 'master') && github.event_name != 'pull_request' &&  github.event_name == 'workflow_dispatch' }}"
    needs: build-tuvali
    uses: mosip/kattu/.github/workflows/npm-publish-to-npm-registry.yml@master
    with:
      SERVICE_LOCATION: '.'
      ANDROID_LOCATION: 'android'
    secrets:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  sonar-analysis-tuvali:
    if: "${{ github.event_name != 'pull_request' }}"
    needs: build-tuvali
    uses: mosip/kattu/.github/workflows/gradlew-sonar-analysis.yml@master
    with:
      SERVICE_LOCATION: '.'
      ANDROID_LOCATION: 'android'
      SONAR_URL: 'https://sonarcloud.io'
      PROJECT_KEY: "mosip_${{ github.event.repository.name }}"
      PROJECT_NAME: "${{ github.event.repository.name }}"
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_ORGANIZATION: ${{ secrets.ORG_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
